<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <!--
 Mapper代理开发的规范：
 1)Mapper接口的名称必须和对应的Mapper.xml映射文件的名称一致
 2)Mapper.xml文件的namespace与Mapper接口的类路径相同(即接口文件和映射文件需要放在同一个包中)
 3)Mapper接口中的方法名和Mapper.xml中定义的每个执行语句的id相同
 4)Mapper接口中方法的输入参数类型和Mapper.xml中定义的每个sql的parameterType相同
 5)Mapper接口方法的输出参数类型要和Mapper.xml中定义的每个sql的resultType的类型相同
   -->
<!--namespace 表示命名空间 -->
<mapper namespace="com.bobo.dao.UserMapper">
	<!--根据ID查询客户信息  -->
	<select id="findUserById" parameterType="String" resultType="User">
		select * from user where user_id=${id}
	</select>
	<!--根据用户名和密码查询客户信息  -->
	<select id="findUserByUsernameAndPwd" parameterType="User" resultType="User">
		select * from user where username=#{username} and password=#{password}
	</select>
	<insert id="insertUser" parameterType="User" useGeneratedKeys="true" keyColumn="user_id" keyProperty="user_id">
		insert into User(username,password,user_type,user_phone,user_addr) 
		values(#{username},#{password},0,#{user_phone},#{user_addr})
	</insert>
	<select id="findUserByUsername" parameterType="String" resultType="Integer">
		select count(*) from user where username=#{username}
	</select>
	<update id="updateUser" parameterType="User">
		update user 
		<set>
			<if test="user_addr != null and user_addr != '' ">
				user_addr=#{user_addr},
			</if>
			<if test="username != null and username != '' ">
				username=#{username},
			</if>
			<if test="password != null and password != '' ">
				password=#{password},
			</if>
			<if test="user_phone != null and user_phone != '' ">
				user_phone=#{user_phone},
			</if>
		</set> 
		where user_id=#{user_id}
	</update>
</mapper>